name: CI

# Trigger the workflow on push or pull request
on: [ push, pull_request ]

jobs:
  build-check:
    name: "Check: code cleanliness"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Check tabs and whitespace
        shell: bash
        run: ".github/workflows/check_whitespace.sh"

  build-ubuntu:
    strategy:
      matrix:
        os: [ ubuntu-16.04, ubuntu-18.04 ]
    name: "Build: ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Install dependencies
        shell: bash
        run: "sudo .github/workflows/install_dependencies_ubuntu.sh"
      # Restore previous ccache cache of compiled object files. Use a SHA
      # in the key so that a new cache file is generated after every build,
      # and have the restore-key use the most recent.
      - name: CCache cache files
        uses: actions/cache@v1
        with:
          path: ${{ GITHUB.WORKSPACE }}/ccache
          key: ${{ matrix.os }}-ccache-${{ github.sha }}
          restore-keys: |
            ${{ matrix.os }}-ccache-
      - name: Build
        env:
          CCACHE_DIR: ${{ GITHUB.WORKSPACE }}/ccache
        run: |
          ccache --zero-stats --max-size 250M
          export PATH=/usr/lib/ccache:$PATH
          make -j3 GHCJOBS=2 GHCRTSFLAGS='+RTS -M5G -A128m -RTS'
          tar czf inst.tar.gz inst
      - name: CCache stats
        env:
          CCACHE_DIR: ${{ GITHUB.WORKSPACE }}/ccache
        run: ccache --show-stats
      - name: Smoketest
        run: "make check"
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }} build
          path: inst.tar.gz

  build-macOS:
    strategy:
      matrix:
        os: [ macos-10.15 ]
    name: "Build: ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Install dependencies
        shell: bash
        run: ".github/workflows/install_dependencies_macos.sh"
      # Restore previous ccache cache of compiled object files. Use a SHA
      # in the key so that a new cache file is generated after every build,
      # and have the restore-key use the most recent.
      - name: CCache cache files
        uses: actions/cache@v1
        with:
          path: ${{ GITHUB.WORKSPACE }}/ccache
          key: ${{ matrix.os }}-ccache-${{ github.sha }}
          restore-keys: |
            ${{ matrix.os }}-ccache-
      - name: Build
        env:
          CCACHE_DIR: ${{ GITHUB.WORKSPACE }}/ccache
        run: |
          ccache --zero-stats --max-size 250M
          export PATH=$(brew --prefix)/opt/local/ccache/libexec:$PATH
          make -j3 GHCJOBS=2 GHCRTSFLAGS='+RTS -M4500M -A128m -RTS' MACOSX_DEPLOYMENT_TARGET=10.13
          tar czf inst.tar.gz inst
      - name: CCache stats
        env:
          CCACHE_DIR: ${{ GITHUB.WORKSPACE }}/ccache
        run: ccache --show-stats
      - name: Smoketest
        run: "make check"
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: macos-10.13+ build
          path: inst.tar.gz
